[
    {
        "section"    : "general",
        "title"      : "Ensure Design Simplicity",
        "paragraph"  : "The architecture must be as simple as possible to maintain yet meet all business and organization requirements."
    },
    {
        "section"    : "general",
        "title"      : "Ease of Use",
        "paragraph"  : "Although the SNOMED International Tooling needs to meet complex requirements, the complexity should not be exposed to the user."
    },
    {
        "section"    : "general",
        "title"      : "Consistent",
        "paragraph"  : "Interfaces must not change and the design of APIs must be constant across the whole framework."
    },
    {
        "section"    : "general",
        "title"      : "Reuse",
        "paragraph"  : "Investigate the reuse of existing and proven solutions, internal and external, where appropriate."
    },
    {
        "section"    : "general",
        "title"      : "Service Oriented",
        "paragraph"  : "The architecture and components built upon it should be viewed as a set of independent services that can be combined to provide a solution."
    },
    {
        "section"    : "general",
        "title"      : "Documented",
        "paragraph"  : "The architecture, its modules and their interfaces should be documented to the appropriate level of detail to enable developers to build interoperable modules."
    },
    {
        "section"    : "tech",
        "title"      : "Innovative and Agile",
        "paragraph"  : "The IT architecture readily supports the incorporation of new technologies to support business and technology innovation."
    },
    {
        "section"    : "tech",
        "title"      : "Technology and Vendor Independence",
        "paragraph"  : "The architecture is designed to minimise the impact of technology and supplier changes on the business, as well as be resilient to change."
    },
    {
        "section"    : "tech",
        "title"      : "Organization Wide Functionality",
        "paragraph"  : "Any application development or procurement should be done within the context of the organisation and not an individual domain area."
    },
    {
        "section"    : "tech",
        "title"      : "Avoid Single Points of Failure",
        "paragraph"  : "The existence of single points of failure in an architecture can lead to entire system outage and the resulting risks, reputational and other."
    },
    {
        "section"    : "tech",
        "title"      : "Technology Choices",
        "paragraph"  : "<ul><li>Java</li><li>Hosted solutions</li><li>MySQL / MariaDB / MongoDB</li><li>GoToMeeting</li><li>open Standards. open source wherever feasible</li><li>No proprietary software</li></ul>"
    },
    {
        "section"    : "tech",
        "title"      : "Ensure Separation of Concerns",
        "paragraph"  : "Modules in the architecture elements meet an exclusive set of requirements and singularity of purpose."
    },
    {
        "section"    : "tech",
        "title"      : "Low Coupling Interfaces",
        "paragraph"  : "Low coupling means that the services (module APIs, for example) are conceived with no affinity to a certain service consumer."
    },
    {
        "section"    : "business",
        "title"      : "Requirements Based Design",
        "paragraph"  : "Changes in applications and technologies are implemented only to meet business needs."
    },
    {
        "section"    : "business",
        "title"      : "Repeatable",
        "paragraph"  : "Defined processes and design patterns should be repeatable and therefore able to be automated wherever feasible."
    }
]
